<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.2 on win32)" generated="20211020 19:22:28.270" rpa="false">
<suite id="s1" name="Test" source="D:\Users\nusahin\Documents\GitHub\ModaNisa_Interview\TestCases\Test.robot">
<test id="s1-t1" name="Tomodvc_Sayfasi_001">
<kw name="create session firefox" library="Base" type="setup">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>${todom_url}</arg>
<arg>firefox</arg>
<arg>options=add_argument("--ignore-certificate-errors");</arg>
</arguments>
<msg timestamp="20211020 19:22:29.971" level="INFO">Opening browser 'firefox' to base url 'https://todomvc.com/examples/vue/#'.</msg>
<status status="PASS" starttime="20211020 19:22:29.971" endtime="20211020 19:22:36.202"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20211020 19:22:36.202" endtime="20211020 19:22:36.619"></status>
</kw>
<status status="PASS" starttime="20211020 19:22:29.971" endtime="20211020 19:22:36.619"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED ${what needs to be done inputText}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:22:36.619" endtime="20211020 19:22:36.635"></status>
</kw>
<kw name="close session" library="Base" type="teardown">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20211020 19:22:36.635" endtime="20211020 19:22:39.892"></status>
</kw>
<status status="PASS" starttime="20211020 19:22:36.635" endtime="20211020 19:22:39.892"></status>
</kw>
<status status="PASS" starttime="20211020 19:22:29.971" endtime="20211020 19:22:39.892" critical="yes"></status>
</test>
<test id="s1-t2" name="Yapilacak_is_Ekleme_002">
<kw name="create session firefox" library="Base" type="setup">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>${todom_url}</arg>
<arg>firefox</arg>
<arg>options=add_argument("--ignore-certificate-errors");</arg>
</arguments>
<msg timestamp="20211020 19:22:39.908" level="INFO">Opening browser 'firefox' to base url 'https://todomvc.com/examples/vue/#'.</msg>
<status status="PASS" starttime="20211020 19:22:39.908" endtime="20211020 19:22:45.770"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20211020 19:22:45.770" endtime="20211020 19:22:46.249"></status>
</kw>
<status status="PASS" starttime="20211020 19:22:39.892" endtime="20211020 19:22:46.249"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${variable}</var>
</assign>
<msg timestamp="20211020 19:22:46.249" level="INFO">${variable} = ppsgx</msg>
<status status="PASS" starttime="20211020 19:22:46.249" endtime="20211020 19:22:46.249"></status>
</kw>
<kw name="And MySteps.I write and press Key" library="MySteps">
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${variable}</arg>
<arg>ENTER</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED inputText=${elementKey}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:22:46.249" endtime="20211020 19:22:46.289"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:22:46.289" level="INFO">Typing text 'ppsgx' into text field '//input[contains(@placeholder,'What needs to be done')]'.</msg>
<status status="PASS" starttime="20211020 19:22:46.289" endtime="20211020 19:22:46.361"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${key}</arg>
</arguments>
<msg timestamp="20211020 19:22:46.361" level="INFO">Sending key(s) ('ENTER',) to //input[contains(@placeholder,'What needs to be done')] element.</msg>
<msg timestamp="20211020 19:22:46.377" level="INFO">Pressing special key ENTER to element.</msg>
<status status="PASS" starttime="20211020 19:22:46.361" endtime="20211020 19:22:46.682"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20211020 19:22:49.687" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20211020 19:22:46.682" endtime="20211020 19:22:49.687"></status>
</kw>
<status status="PASS" starttime="20211020 19:22:46.249" endtime="20211020 19:22:49.687"></status>
</kw>
<kw name="Then MySteps.I should see last variable in table" library="MySteps">
<arguments>
<arg>${variable}</arg>
</arguments>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${last item}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20211020 19:22:49.711" level="INFO">${value} = ppsgx</msg>
<status status="PASS" starttime="20211020 19:22:49.687" endtime="20211020 19:22:49.711"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${variable}</arg>
<arg>${value}</arg>
<arg>msg=${variable} == ${value} does not Match</arg>
</arguments>
<status status="PASS" starttime="20211020 19:22:49.711" endtime="20211020 19:22:49.711"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${issue count}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED ${issue count}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:22:49.711" endtime="20211020 19:22:49.727"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${item left}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED ${item left}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:22:49.727" endtime="20211020 19:22:49.735"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${all button}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED ${all button}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:22:49.735" endtime="20211020 19:22:49.743"></status>
</kw>
<status status="PASS" starttime="20211020 19:22:49.687" endtime="20211020 19:22:49.743"></status>
</kw>
<kw name="close session" library="Base" type="teardown">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20211020 19:22:49.743" endtime="20211020 19:22:53.288"></status>
</kw>
<status status="PASS" starttime="20211020 19:22:49.743" endtime="20211020 19:22:53.288"></status>
</kw>
<status status="PASS" starttime="20211020 19:22:39.892" endtime="20211020 19:22:53.288" critical="yes"></status>
</test>
<test id="s1-t3" name="Yapilacak_is_Ekleme_SecilmedenSilme_003">
<kw name="create session firefox" library="Base" type="setup">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>${todom_url}</arg>
<arg>firefox</arg>
<arg>options=add_argument("--ignore-certificate-errors");</arg>
</arguments>
<msg timestamp="20211020 19:22:53.288" level="INFO">Opening browser 'firefox' to base url 'https://todomvc.com/examples/vue/#'.</msg>
<status status="PASS" starttime="20211020 19:22:53.288" endtime="20211020 19:22:59.653"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20211020 19:22:59.653" endtime="20211020 19:23:00.098"></status>
</kw>
<status status="PASS" starttime="20211020 19:22:53.288" endtime="20211020 19:23:00.098"></status>
</kw>
<kw name="Then MySteps.I will delete one item and verification with status" library="MySteps">
<arguments>
<arg>unselect</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}' == 'unselect'</arg>
<arg>unselectedDelete_S</arg>
<arg>ELSE IF</arg>
<arg>'${status}' == 'select'</arg>
<arg>selectedDelete_S</arg>
<arg>ELSE</arg>
<arg>BuiltIn.Fail</arg>
<arg>msg=HAVE TO CHOOSE selected or unselected</arg>
</arguments>
<kw name="unselectedDelete_S" library="MySteps">
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${issue count}</arg>
</arguments>
<assign>
<var>${firstIssueCount}</var>
</assign>
<msg timestamp="20211020 19:23:00.154" level="INFO">${firstIssueCount} = </msg>
<status status="PASS" starttime="20211020 19:23:00.106" endtime="20211020 19:23:00.154"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${firstIssueCount}' == ''</arg>
<arg>And MySteps.I write and press Key</arg>
<arg>${what needs to be done inputText}</arg>
<arg>test</arg>
<arg>ENTER</arg>
</arguments>
<kw name="And MySteps.I write and press Key" library="MySteps">
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>test</arg>
<arg>ENTER</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED inputText=${elementKey}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:23:00.162" endtime="20211020 19:23:00.170"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:23:00.170" level="INFO">Typing text 'test' into text field '//input[contains(@placeholder,'What needs to be done')]'.</msg>
<status status="PASS" starttime="20211020 19:23:00.170" endtime="20211020 19:23:00.226"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${key}</arg>
</arguments>
<msg timestamp="20211020 19:23:00.234" level="INFO">Sending key(s) ('ENTER',) to //input[contains(@placeholder,'What needs to be done')] element.</msg>
<msg timestamp="20211020 19:23:00.242" level="INFO">Pressing special key ENTER to element.</msg>
<status status="PASS" starttime="20211020 19:23:00.226" endtime="20211020 19:23:00.545"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20211020 19:23:03.547" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20211020 19:23:00.545" endtime="20211020 19:23:03.547"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:00.154" endtime="20211020 19:23:03.547"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:00.154" endtime="20211020 19:23:03.547"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${issue count}</arg>
</arguments>
<assign>
<var>${firstIssueCount}</var>
</assign>
<msg timestamp="20211020 19:23:03.579" level="INFO">${firstIssueCount} = 1</msg>
<status status="PASS" starttime="20211020 19:23:03.547" endtime="20211020 19:23:03.579"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${firstIssueCount}' == '1'</arg>
<arg>If exist 1 item do not see item left</arg>
<arg>ELSE</arg>
<arg>If exist items Delete and Verify item left Counts</arg>
</arguments>
<kw name="If exist 1 item do not see item left" library="MySteps">
<kw name="Get WebElement" library="SeleniumLibrary">
<doc>Returns the first WebElement matching the given ``locator``.</doc>
<arguments>
<arg>(//*[@class='todo-list']//button[@class='destroy'])[1]</arg>
</arguments>
<assign>
<var>${ele}</var>
</assign>
<msg timestamp="20211020 19:23:03.587" level="INFO">${ele} = &lt;selenium.webdriver.firefox.webelement.FirefoxWebElement (session="f118a2a8-d9d9-4583-b2bf-371ec29a1d8b", element="46bffdb8-3004-4834-8bc2-6acc03119338")&gt;</msg>
<status status="PASS" starttime="20211020 19:23:03.579" endtime="20211020 19:23:03.587"></status>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>arguments[0].click();</arg>
<arg>ARGUMENTS</arg>
<arg>${ele}</arg>
</arguments>
<msg timestamp="20211020 19:23:03.587" level="INFO">Executing JavaScript:
arguments[0].click();
By using argument:
'&lt;selenium.webdriver.firefox.webelement.FirefoxWebElement (session="f118a2a8-d9d9-4583-b2bf-371ec29a1d8b", element="46bffdb8-3004-4834-8bc2-6acc03119338")&gt;'</msg>
<status status="PASS" starttime="20211020 19:23:03.587" endtime="20211020 19:23:03.611"></status>
</kw>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<arguments>
<arg>${last item}</arg>
</arguments>
<msg timestamp="20211020 19:23:03.619" level="INFO">Current page does not contain element '(//*[@class='todo-list']//label)[last()]'.</msg>
<status status="PASS" starttime="20211020 19:23:03.611" endtime="20211020 19:23:03.619"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20211020 19:23:08.623" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20211020 19:23:03.619" endtime="20211020 19:23:08.623"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:03.579" endtime="20211020 19:23:08.623"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:03.579" endtime="20211020 19:23:08.623"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:00.106" endtime="20211020 19:23:08.623"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:00.106" endtime="20211020 19:23:08.623"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:00.098" endtime="20211020 19:23:08.623"></status>
</kw>
<kw name="Then List Should be empty" library="MySteps">
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<arguments>
<arg>${last item}</arg>
</arguments>
<msg timestamp="20211020 19:23:08.631" level="INFO">Current page does not contain element '(//*[@class='todo-list']//label)[last()]'.</msg>
<status status="PASS" starttime="20211020 19:23:08.623" endtime="20211020 19:23:08.631"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:08.623" endtime="20211020 19:23:08.631"></status>
</kw>
<kw name="close session" library="Base" type="teardown">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20211020 19:23:08.631" endtime="20211020 19:23:12.271"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:08.631" endtime="20211020 19:23:12.271"></status>
</kw>
<status status="PASS" starttime="20211020 19:22:53.288" endtime="20211020 19:23:12.271" critical="yes"></status>
</test>
<test id="s1-t4" name="Yapilacak_is_Eklenilmesi_Secilmesi_004">
<kw name="create session firefox" library="Base" type="setup">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>${todom_url}</arg>
<arg>firefox</arg>
<arg>options=add_argument("--ignore-certificate-errors");</arg>
</arguments>
<msg timestamp="20211020 19:23:12.271" level="INFO">Opening browser 'firefox' to base url 'https://todomvc.com/examples/vue/#'.</msg>
<status status="PASS" starttime="20211020 19:23:12.271" endtime="20211020 19:23:18.142"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20211020 19:23:18.142" endtime="20211020 19:23:18.605"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:12.271" endtime="20211020 19:23:18.605"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${variable}</var>
</assign>
<msg timestamp="20211020 19:23:18.605" level="INFO">${variable} = shvgu</msg>
<status status="PASS" starttime="20211020 19:23:18.605" endtime="20211020 19:23:18.605"></status>
</kw>
<kw name="And MySteps.I write and press Key" library="MySteps">
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${variable}</arg>
<arg>ENTER</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED inputText=${elementKey}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:23:18.605" endtime="20211020 19:23:18.645"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:23:18.645" level="INFO">Typing text 'shvgu' into text field '//input[contains(@placeholder,'What needs to be done')]'.</msg>
<status status="PASS" starttime="20211020 19:23:18.645" endtime="20211020 19:23:18.701"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${key}</arg>
</arguments>
<msg timestamp="20211020 19:23:18.701" level="INFO">Sending key(s) ('ENTER',) to //input[contains(@placeholder,'What needs to be done')] element.</msg>
<msg timestamp="20211020 19:23:18.709" level="INFO">Pressing special key ENTER to element.</msg>
<status status="PASS" starttime="20211020 19:23:18.701" endtime="20211020 19:23:19.000"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20211020 19:23:22.002" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20211020 19:23:19.000" endtime="20211020 19:23:22.002"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:18.605" endtime="20211020 19:23:22.002"></status>
</kw>
<kw name="And MySteps.I should see last variable in table" library="MySteps">
<arguments>
<arg>${variable}</arg>
</arguments>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${last item}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20211020 19:23:22.025" level="INFO">${value} = shvgu</msg>
<status status="PASS" starttime="20211020 19:23:22.002" endtime="20211020 19:23:22.025"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${variable}</arg>
<arg>${value}</arg>
<arg>msg=${variable} == ${value} does not Match</arg>
</arguments>
<status status="PASS" starttime="20211020 19:23:22.025" endtime="20211020 19:23:22.025"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${issue count}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED ${issue count}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:23:22.025" endtime="20211020 19:23:22.041"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${item left}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED ${item left}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:23:22.041" endtime="20211020 19:23:22.049"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${all button}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED ${all button}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:23:22.049" endtime="20211020 19:23:22.057"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:22.002" endtime="20211020 19:23:22.057"></status>
</kw>
<kw name="Then I click on any checkbox and see as a DONE" library="MySteps">
<arguments>
<arg>${last item checkbox}</arg>
<arg>${variable}</arg>
</arguments>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${issue count}</arg>
</arguments>
<assign>
<var>${firstIssueCountBefore}</var>
</assign>
<msg timestamp="20211020 19:23:22.079" level="INFO">${firstIssueCountBefore} = 1</msg>
<status status="PASS" starttime="20211020 19:23:22.057" endtime="20211020 19:23:22.079"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${firstIssueCountBefore}-1</arg>
</arguments>
<assign>
<var>${firstIssueCountResponse}</var>
</assign>
<msg timestamp="20211020 19:23:22.079" level="INFO">${firstIssueCountResponse} = 0</msg>
<status status="PASS" starttime="20211020 19:23:22.079" endtime="20211020 19:23:22.079"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${elementKey}</arg>
</arguments>
<msg timestamp="20211020 19:23:22.079" level="INFO">Clicking element '(//*[@class='todo-list']//input[@type='checkbox'])[last()]'.</msg>
<status status="PASS" starttime="20211020 19:23:22.079" endtime="20211020 19:23:22.319"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${issue count}</arg>
</arguments>
<assign>
<var>${firstIssueCountAfter}</var>
</assign>
<msg timestamp="20211020 19:23:22.351" level="INFO">${firstIssueCountAfter} = 0</msg>
<status status="PASS" starttime="20211020 19:23:22.319" endtime="20211020 19:23:22.351"></status>
</kw>
<kw name="Then BuiltIn.Should be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${firstIssueCountResponse}</arg>
<arg>${firstIssueCountAfter}</arg>
<arg>msg=${firstIssueCountResponse} == ${firstIssueCountAfter} does not Match</arg>
</arguments>
<msg timestamp="20211020 19:23:22.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211020 19:23:22.351" endtime="20211020 19:23:22.351"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20211020 19:23:27.356" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20211020 19:23:22.351" endtime="20211020 19:23:27.356"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:22.057" endtime="20211020 19:23:27.356"></status>
</kw>
<kw name="close session" library="Base" type="teardown">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20211020 19:23:27.356" endtime="20211020 19:23:30.807"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:27.356" endtime="20211020 19:23:30.807"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:12.271" endtime="20211020 19:23:30.807" critical="yes"></status>
</test>
<test id="s1-t5" name="Yapilacak_is_Ekleme_SecilerekSilme_005">
<kw name="create session firefox" library="Base" type="setup">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>${todom_url}</arg>
<arg>firefox</arg>
<arg>options=add_argument("--ignore-certificate-errors");</arg>
</arguments>
<msg timestamp="20211020 19:23:30.807" level="INFO">Opening browser 'firefox' to base url 'https://todomvc.com/examples/vue/#'.</msg>
<status status="PASS" starttime="20211020 19:23:30.807" endtime="20211020 19:23:37.810"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20211020 19:23:37.810" endtime="20211020 19:23:38.266"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:30.807" endtime="20211020 19:23:38.266"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${variable}</var>
</assign>
<msg timestamp="20211020 19:23:38.266" level="INFO">${variable} = wsbtz</msg>
<status status="PASS" starttime="20211020 19:23:38.266" endtime="20211020 19:23:38.266"></status>
</kw>
<kw name="And MySteps.I write and press Key" library="MySteps">
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${variable}</arg>
<arg>ENTER</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED inputText=${elementKey}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:23:38.266" endtime="20211020 19:23:38.296"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:23:38.296" level="INFO">Typing text 'wsbtz' into text field '//input[contains(@placeholder,'What needs to be done')]'.</msg>
<status status="PASS" starttime="20211020 19:23:38.296" endtime="20211020 19:23:38.346"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${key}</arg>
</arguments>
<msg timestamp="20211020 19:23:38.346" level="INFO">Sending key(s) ('ENTER',) to //input[contains(@placeholder,'What needs to be done')] element.</msg>
<msg timestamp="20211020 19:23:38.366" level="INFO">Pressing special key ENTER to element.</msg>
<status status="PASS" starttime="20211020 19:23:38.346" endtime="20211020 19:23:38.678"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20211020 19:23:41.679" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20211020 19:23:38.678" endtime="20211020 19:23:41.679"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:38.266" endtime="20211020 19:23:41.679"></status>
</kw>
<kw name="And MySteps.I should see last variable in table" library="MySteps">
<arguments>
<arg>${variable}</arg>
</arguments>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${last item}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20211020 19:23:41.709" level="INFO">${value} = wsbtz</msg>
<status status="PASS" starttime="20211020 19:23:41.679" endtime="20211020 19:23:41.709"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${variable}</arg>
<arg>${value}</arg>
<arg>msg=${variable} == ${value} does not Match</arg>
</arguments>
<status status="PASS" starttime="20211020 19:23:41.709" endtime="20211020 19:23:41.709"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${issue count}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED ${issue count}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:23:41.709" endtime="20211020 19:23:41.719"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${item left}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED ${item left}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:23:41.719" endtime="20211020 19:23:41.729"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${all button}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED ${all button}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:23:41.729" endtime="20211020 19:23:41.739"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:41.679" endtime="20211020 19:23:41.739"></status>
</kw>
<kw name="Then I click on any checkbox and see as a DONE" library="MySteps">
<arguments>
<arg>${last item checkbox}</arg>
<arg>${variable}</arg>
</arguments>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${issue count}</arg>
</arguments>
<assign>
<var>${firstIssueCountBefore}</var>
</assign>
<msg timestamp="20211020 19:23:41.759" level="INFO">${firstIssueCountBefore} = 1</msg>
<status status="PASS" starttime="20211020 19:23:41.739" endtime="20211020 19:23:41.759"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${firstIssueCountBefore}-1</arg>
</arguments>
<assign>
<var>${firstIssueCountResponse}</var>
</assign>
<msg timestamp="20211020 19:23:41.759" level="INFO">${firstIssueCountResponse} = 0</msg>
<status status="PASS" starttime="20211020 19:23:41.759" endtime="20211020 19:23:41.759"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${elementKey}</arg>
</arguments>
<msg timestamp="20211020 19:23:41.759" level="INFO">Clicking element '(//*[@class='todo-list']//input[@type='checkbox'])[last()]'.</msg>
<status status="PASS" starttime="20211020 19:23:41.759" endtime="20211020 19:23:42.011"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${issue count}</arg>
</arguments>
<assign>
<var>${firstIssueCountAfter}</var>
</assign>
<msg timestamp="20211020 19:23:42.031" level="INFO">${firstIssueCountAfter} = 0</msg>
<status status="PASS" starttime="20211020 19:23:42.011" endtime="20211020 19:23:42.031"></status>
</kw>
<kw name="Then BuiltIn.Should be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${firstIssueCountResponse}</arg>
<arg>${firstIssueCountAfter}</arg>
<arg>msg=${firstIssueCountResponse} == ${firstIssueCountAfter} does not Match</arg>
</arguments>
<msg timestamp="20211020 19:23:42.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211020 19:23:42.031" endtime="20211020 19:23:42.041"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20211020 19:23:47.044" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20211020 19:23:42.041" endtime="20211020 19:23:47.044"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:41.739" endtime="20211020 19:23:47.044"></status>
</kw>
<kw name="Then I will delete one item and verification with status" library="MySteps">
<arguments>
<arg>select</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${status}' == 'unselect'</arg>
<arg>unselectedDelete_S</arg>
<arg>ELSE IF</arg>
<arg>'${status}' == 'select'</arg>
<arg>selectedDelete_S</arg>
<arg>ELSE</arg>
<arg>BuiltIn.Fail</arg>
<arg>msg=HAVE TO CHOOSE selected or unselected</arg>
</arguments>
<kw name="selectedDelete_S" library="MySteps">
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${issue count}</arg>
</arguments>
<assign>
<var>${firstIssueCount}</var>
</assign>
<msg timestamp="20211020 19:23:47.068" level="INFO">${firstIssueCount} = 0</msg>
<status status="PASS" starttime="20211020 19:23:47.044" endtime="20211020 19:23:47.068"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${firstIssueCount}' == ''</arg>
<arg>And MySteps.I write and press Key</arg>
<arg>${what needs to be done inputText}</arg>
<arg>test</arg>
<arg>ENTER</arg>
</arguments>
<status status="PASS" starttime="20211020 19:23:47.068" endtime="20211020 19:23:47.068"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${issue count}</arg>
</arguments>
<assign>
<var>${firstIssueCount}</var>
</assign>
<msg timestamp="20211020 19:23:47.092" level="INFO">${firstIssueCount} = 0</msg>
<status status="PASS" starttime="20211020 19:23:47.068" endtime="20211020 19:23:47.092"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${firstIssueCount}' == '0'</arg>
<arg>If exist 0 item do not see item left</arg>
<arg>ELSE</arg>
<arg>If exist items Delete and Verify item left Counts</arg>
</arguments>
<kw name="If exist 0 item do not see item left" library="MySteps">
<kw name="Get WebElement" library="SeleniumLibrary">
<doc>Returns the first WebElement matching the given ``locator``.</doc>
<arguments>
<arg>(//*[@class='todo-list']//button[@class='destroy'])[1]</arg>
</arguments>
<assign>
<var>${ele}</var>
</assign>
<msg timestamp="20211020 19:23:47.100" level="INFO">${ele} = &lt;selenium.webdriver.firefox.webelement.FirefoxWebElement (session="092d28ae-86ae-4c88-87d9-08f8338720bb", element="dc6dbdf6-7af0-47f5-88c0-815549ef0d3d")&gt;</msg>
<status status="PASS" starttime="20211020 19:23:47.092" endtime="20211020 19:23:47.100"></status>
</kw>
<kw name="Execute Javascript" library="SeleniumLibrary">
<doc>Executes the given JavaScript code with possible arguments.</doc>
<arguments>
<arg>arguments[0].click();</arg>
<arg>ARGUMENTS</arg>
<arg>${ele}</arg>
</arguments>
<msg timestamp="20211020 19:23:47.100" level="INFO">Executing JavaScript:
arguments[0].click();
By using argument:
'&lt;selenium.webdriver.firefox.webelement.FirefoxWebElement (session="092d28ae-86ae-4c88-87d9-08f8338720bb", element="dc6dbdf6-7af0-47f5-88c0-815549ef0d3d")&gt;'</msg>
<status status="PASS" starttime="20211020 19:23:47.100" endtime="20211020 19:23:47.117"></status>
</kw>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<arguments>
<arg>${last item}</arg>
</arguments>
<msg timestamp="20211020 19:23:47.125" level="INFO">Current page does not contain element '(//*[@class='todo-list']//label)[last()]'.</msg>
<status status="PASS" starttime="20211020 19:23:47.117" endtime="20211020 19:23:47.125"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20211020 19:23:52.130" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20211020 19:23:47.125" endtime="20211020 19:23:52.130"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:47.092" endtime="20211020 19:23:52.130"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:47.092" endtime="20211020 19:23:52.130"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:47.044" endtime="20211020 19:23:52.130"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:47.044" endtime="20211020 19:23:52.130"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:47.044" endtime="20211020 19:23:52.130"></status>
</kw>
<kw name="close session" library="Base" type="teardown">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20211020 19:23:52.130" endtime="20211020 19:23:55.594"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:52.130" endtime="20211020 19:23:55.594"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:30.807" endtime="20211020 19:23:55.594" critical="yes"></status>
</test>
<test id="s1-t6" name="Yapilacak_is_BirdenFazla_Ekleme_ClearCompleted_006">
<kw name="create session firefox" library="Base" type="setup">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>${todom_url}</arg>
<arg>firefox</arg>
<arg>options=add_argument("--ignore-certificate-errors");</arg>
</arguments>
<msg timestamp="20211020 19:23:55.602" level="INFO">Opening browser 'firefox' to base url 'https://todomvc.com/examples/vue/#'.</msg>
<status status="PASS" starttime="20211020 19:23:55.602" endtime="20211020 19:24:01.553"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20211020 19:24:01.553" endtime="20211020 19:24:02.090"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:55.602" endtime="20211020 19:24:02.090"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${variable}</var>
</assign>
<msg timestamp="20211020 19:24:02.090" level="INFO">${variable} = mbpnd</msg>
<status status="PASS" starttime="20211020 19:24:02.090" endtime="20211020 19:24:02.090"></status>
</kw>
<kw name="And MySteps.I write and press Key" library="MySteps">
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${variable}</arg>
<arg>ENTER</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED inputText=${elementKey}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:24:02.090" endtime="20211020 19:24:02.122"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:02.122" level="INFO">Typing text 'mbpnd' into text field '//input[contains(@placeholder,'What needs to be done')]'.</msg>
<status status="PASS" starttime="20211020 19:24:02.122" endtime="20211020 19:24:02.202"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${key}</arg>
</arguments>
<msg timestamp="20211020 19:24:02.210" level="INFO">Sending key(s) ('ENTER',) to //input[contains(@placeholder,'What needs to be done')] element.</msg>
<msg timestamp="20211020 19:24:02.226" level="INFO">Pressing special key ENTER to element.</msg>
<status status="PASS" starttime="20211020 19:24:02.202" endtime="20211020 19:24:02.514"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20211020 19:24:05.521" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20211020 19:24:02.514" endtime="20211020 19:24:05.521"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:02.090" endtime="20211020 19:24:05.521"></status>
</kw>
<kw name="And MySteps.I should see last variable in table" library="MySteps">
<arguments>
<arg>${variable}</arg>
</arguments>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${last item}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20211020 19:24:05.569" level="INFO">${value} = mbpnd</msg>
<status status="PASS" starttime="20211020 19:24:05.521" endtime="20211020 19:24:05.569"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${variable}</arg>
<arg>${value}</arg>
<arg>msg=${variable} == ${value} does not Match</arg>
</arguments>
<status status="PASS" starttime="20211020 19:24:05.569" endtime="20211020 19:24:05.569"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${issue count}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED ${issue count}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:24:05.569" endtime="20211020 19:24:05.585"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${item left}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED ${item left}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:24:05.591" endtime="20211020 19:24:05.600"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${all button}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED ${all button}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:24:05.600" endtime="20211020 19:24:05.616"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:05.521" endtime="20211020 19:24:05.616"></status>
</kw>
<kw name="Then I click on any checkbox and see as a DONE" library="MySteps">
<arguments>
<arg>${last item checkbox}</arg>
<arg>${variable}</arg>
</arguments>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${issue count}</arg>
</arguments>
<assign>
<var>${firstIssueCountBefore}</var>
</assign>
<msg timestamp="20211020 19:24:05.640" level="INFO">${firstIssueCountBefore} = 1</msg>
<status status="PASS" starttime="20211020 19:24:05.616" endtime="20211020 19:24:05.640"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${firstIssueCountBefore}-1</arg>
</arguments>
<assign>
<var>${firstIssueCountResponse}</var>
</assign>
<msg timestamp="20211020 19:24:05.640" level="INFO">${firstIssueCountResponse} = 0</msg>
<status status="PASS" starttime="20211020 19:24:05.640" endtime="20211020 19:24:05.640"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${elementKey}</arg>
</arguments>
<msg timestamp="20211020 19:24:05.640" level="INFO">Clicking element '(//*[@class='todo-list']//input[@type='checkbox'])[last()]'.</msg>
<status status="PASS" starttime="20211020 19:24:05.640" endtime="20211020 19:24:05.881"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${issue count}</arg>
</arguments>
<assign>
<var>${firstIssueCountAfter}</var>
</assign>
<msg timestamp="20211020 19:24:05.905" level="INFO">${firstIssueCountAfter} = 0</msg>
<status status="PASS" starttime="20211020 19:24:05.881" endtime="20211020 19:24:05.905"></status>
</kw>
<kw name="Then BuiltIn.Should be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${firstIssueCountResponse}</arg>
<arg>${firstIssueCountAfter}</arg>
<arg>msg=${firstIssueCountResponse} == ${firstIssueCountAfter} does not Match</arg>
</arguments>
<msg timestamp="20211020 19:24:05.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211020 19:24:05.905" endtime="20211020 19:24:05.905"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20211020 19:24:10.913" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20211020 19:24:05.905" endtime="20211020 19:24:10.913"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:05.616" endtime="20211020 19:24:10.913"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${variable}</var>
</assign>
<msg timestamp="20211020 19:24:10.913" level="INFO">${variable} = dcqxi</msg>
<status status="PASS" starttime="20211020 19:24:10.913" endtime="20211020 19:24:10.913"></status>
</kw>
<kw name="And MySteps.I write and press Key" library="MySteps">
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${variable}</arg>
<arg>ENTER</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED inputText=${elementKey}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:24:10.913" endtime="20211020 19:24:10.921"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:10.921" level="INFO">Typing text 'dcqxi' into text field '//input[contains(@placeholder,'What needs to be done')]'.</msg>
<status status="PASS" starttime="20211020 19:24:10.921" endtime="20211020 19:24:10.969"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${key}</arg>
</arguments>
<msg timestamp="20211020 19:24:10.969" level="INFO">Sending key(s) ('ENTER',) to //input[contains(@placeholder,'What needs to be done')] element.</msg>
<msg timestamp="20211020 19:24:10.988" level="INFO">Pressing special key ENTER to element.</msg>
<status status="PASS" starttime="20211020 19:24:10.969" endtime="20211020 19:24:11.301"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20211020 19:24:14.305" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20211020 19:24:11.301" endtime="20211020 19:24:14.305"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:10.913" endtime="20211020 19:24:14.305"></status>
</kw>
<kw name="And MySteps.I should see last variable in table" library="MySteps">
<arguments>
<arg>${variable}</arg>
</arguments>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${last item}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20211020 19:24:14.345" level="INFO">${value} = dcqxi</msg>
<status status="PASS" starttime="20211020 19:24:14.305" endtime="20211020 19:24:14.345"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${variable}</arg>
<arg>${value}</arg>
<arg>msg=${variable} == ${value} does not Match</arg>
</arguments>
<status status="PASS" starttime="20211020 19:24:14.345" endtime="20211020 19:24:14.345"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${issue count}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED ${issue count}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:24:14.345" endtime="20211020 19:24:14.361"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${item left}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED ${item left}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:24:14.361" endtime="20211020 19:24:14.377"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${all button}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED ${all button}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:24:14.377" endtime="20211020 19:24:14.393"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:14.305" endtime="20211020 19:24:14.393"></status>
</kw>
<kw name="Then I click on any checkbox and see as a DONE" library="MySteps">
<arguments>
<arg>${last item checkbox}</arg>
<arg>${variable}</arg>
</arguments>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${issue count}</arg>
</arguments>
<assign>
<var>${firstIssueCountBefore}</var>
</assign>
<msg timestamp="20211020 19:24:14.425" level="INFO">${firstIssueCountBefore} = 1</msg>
<status status="PASS" starttime="20211020 19:24:14.401" endtime="20211020 19:24:14.425"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${firstIssueCountBefore}-1</arg>
</arguments>
<assign>
<var>${firstIssueCountResponse}</var>
</assign>
<msg timestamp="20211020 19:24:14.425" level="INFO">${firstIssueCountResponse} = 0</msg>
<status status="PASS" starttime="20211020 19:24:14.425" endtime="20211020 19:24:14.425"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${elementKey}</arg>
</arguments>
<msg timestamp="20211020 19:24:14.425" level="INFO">Clicking element '(//*[@class='todo-list']//input[@type='checkbox'])[last()]'.</msg>
<status status="PASS" starttime="20211020 19:24:14.425" endtime="20211020 19:24:14.668"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${issue count}</arg>
</arguments>
<assign>
<var>${firstIssueCountAfter}</var>
</assign>
<msg timestamp="20211020 19:24:14.700" level="INFO">${firstIssueCountAfter} = 0</msg>
<status status="PASS" starttime="20211020 19:24:14.668" endtime="20211020 19:24:14.700"></status>
</kw>
<kw name="Then BuiltIn.Should be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${firstIssueCountResponse}</arg>
<arg>${firstIssueCountAfter}</arg>
<arg>msg=${firstIssueCountResponse} == ${firstIssueCountAfter} does not Match</arg>
</arguments>
<msg timestamp="20211020 19:24:14.700" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211020 19:24:14.700" endtime="20211020 19:24:14.700"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20211020 19:24:19.705" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20211020 19:24:14.700" endtime="20211020 19:24:19.705"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:14.401" endtime="20211020 19:24:19.705"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${variable}</var>
</assign>
<msg timestamp="20211020 19:24:19.705" level="INFO">${variable} = alkns</msg>
<status status="PASS" starttime="20211020 19:24:19.705" endtime="20211020 19:24:19.705"></status>
</kw>
<kw name="And MySteps.I write and press Key" library="MySteps">
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${variable}</arg>
<arg>ENTER</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED inputText=${elementKey}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:24:19.705" endtime="20211020 19:24:19.712"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:19.712" level="INFO">Typing text 'alkns' into text field '//input[contains(@placeholder,'What needs to be done')]'.</msg>
<status status="PASS" starttime="20211020 19:24:19.712" endtime="20211020 19:24:19.760"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${key}</arg>
</arguments>
<msg timestamp="20211020 19:24:19.760" level="INFO">Sending key(s) ('ENTER',) to //input[contains(@placeholder,'What needs to be done')] element.</msg>
<msg timestamp="20211020 19:24:19.768" level="INFO">Pressing special key ENTER to element.</msg>
<status status="PASS" starttime="20211020 19:24:19.760" endtime="20211020 19:24:20.067"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20211020 19:24:23.074" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20211020 19:24:20.067" endtime="20211020 19:24:23.074"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:19.705" endtime="20211020 19:24:23.074"></status>
</kw>
<kw name="And MySteps.I should see last variable in table" library="MySteps">
<arguments>
<arg>${variable}</arg>
</arguments>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${last item}</arg>
</arguments>
<assign>
<var>${value}</var>
</assign>
<msg timestamp="20211020 19:24:23.098" level="INFO">${value} = alkns</msg>
<status status="PASS" starttime="20211020 19:24:23.074" endtime="20211020 19:24:23.098"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${variable}</arg>
<arg>${value}</arg>
<arg>msg=${variable} == ${value} does not Match</arg>
</arguments>
<status status="PASS" starttime="20211020 19:24:23.098" endtime="20211020 19:24:23.098"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${issue count}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED ${issue count}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:24:23.098" endtime="20211020 19:24:23.106"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${item left}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED ${item left}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:24:23.106" endtime="20211020 19:24:23.114"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${all button}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED ${all button}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:24:23.114" endtime="20211020 19:24:23.130"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:23.074" endtime="20211020 19:24:23.130"></status>
</kw>
<kw name="Then I click on any checkbox and see as a DONE" library="MySteps">
<arguments>
<arg>${last item checkbox}</arg>
<arg>${variable}</arg>
</arguments>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${issue count}</arg>
</arguments>
<assign>
<var>${firstIssueCountBefore}</var>
</assign>
<msg timestamp="20211020 19:24:23.154" level="INFO">${firstIssueCountBefore} = 1</msg>
<status status="PASS" starttime="20211020 19:24:23.130" endtime="20211020 19:24:23.154"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${firstIssueCountBefore}-1</arg>
</arguments>
<assign>
<var>${firstIssueCountResponse}</var>
</assign>
<msg timestamp="20211020 19:24:23.154" level="INFO">${firstIssueCountResponse} = 0</msg>
<status status="PASS" starttime="20211020 19:24:23.154" endtime="20211020 19:24:23.154"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${elementKey}</arg>
</arguments>
<msg timestamp="20211020 19:24:23.154" level="INFO">Clicking element '(//*[@class='todo-list']//input[@type='checkbox'])[last()]'.</msg>
<status status="PASS" starttime="20211020 19:24:23.154" endtime="20211020 19:24:23.386"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${issue count}</arg>
</arguments>
<assign>
<var>${firstIssueCountAfter}</var>
</assign>
<msg timestamp="20211020 19:24:23.410" level="INFO">${firstIssueCountAfter} = 0</msg>
<status status="PASS" starttime="20211020 19:24:23.386" endtime="20211020 19:24:23.410"></status>
</kw>
<kw name="Then BuiltIn.Should be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${firstIssueCountResponse}</arg>
<arg>${firstIssueCountAfter}</arg>
<arg>msg=${firstIssueCountResponse} == ${firstIssueCountAfter} does not Match</arg>
</arguments>
<msg timestamp="20211020 19:24:23.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211020 19:24:23.410" endtime="20211020 19:24:23.410"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20211020 19:24:28.416" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20211020 19:24:23.410" endtime="20211020 19:24:28.416"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:23.130" endtime="20211020 19:24:28.416"></status>
</kw>
<kw name="When click element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${clear all button}</arg>
</arguments>
<msg timestamp="20211020 19:24:28.416" level="INFO">Clicking element '//button[@class='clear-completed']'.</msg>
<status status="PASS" starttime="20211020 19:24:28.416" endtime="20211020 19:24:28.648"></status>
</kw>
<kw name="Then List Should be empty" library="MySteps">
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<arguments>
<arg>${last item}</arg>
</arguments>
<msg timestamp="20211020 19:24:28.656" level="INFO">Current page does not contain element '(//*[@class='todo-list']//label)[last()]'.</msg>
<status status="PASS" starttime="20211020 19:24:28.648" endtime="20211020 19:24:28.656"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:28.648" endtime="20211020 19:24:28.656"></status>
</kw>
<kw name="close session" library="Base" type="teardown">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20211020 19:24:28.664" endtime="20211020 19:24:32.113"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:28.664" endtime="20211020 19:24:32.113"></status>
</kw>
<status status="PASS" starttime="20211020 19:23:55.594" endtime="20211020 19:24:32.113" critical="yes"></status>
</test>
<test id="s1-t7" name="Yapilacak_is_Ekleme_All_Active_Completed_007">
<kw name="create session firefox" library="Base" type="setup">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the given ``url``.</doc>
<arguments>
<arg>${todom_url}</arg>
<arg>firefox</arg>
<arg>options=add_argument("--ignore-certificate-errors");</arg>
</arguments>
<msg timestamp="20211020 19:24:32.113" level="INFO">Opening browser 'firefox' to base url 'https://todomvc.com/examples/vue/#'.</msg>
<status status="PASS" starttime="20211020 19:24:32.113" endtime="20211020 19:24:38.402"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20211020 19:24:38.402" endtime="20211020 19:24:38.854"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:32.113" endtime="20211020 19:24:38.854"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${firstVariable}</var>
</assign>
<msg timestamp="20211020 19:24:38.854" level="INFO">${firstVariable} = efsso</msg>
<status status="PASS" starttime="20211020 19:24:38.854" endtime="20211020 19:24:38.854"></status>
</kw>
<kw name="And MySteps.I write and press Key" library="MySteps">
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${firstVariable}</arg>
<arg>ENTER</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED inputText=${elementKey}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:24:38.867" endtime="20211020 19:24:38.893"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:38.893" level="INFO">Typing text 'efsso' into text field '//input[contains(@placeholder,'What needs to be done')]'.</msg>
<status status="PASS" starttime="20211020 19:24:38.893" endtime="20211020 19:24:38.980"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${key}</arg>
</arguments>
<msg timestamp="20211020 19:24:38.980" level="INFO">Sending key(s) ('ENTER',) to //input[contains(@placeholder,'What needs to be done')] element.</msg>
<msg timestamp="20211020 19:24:39.006" level="INFO">Pressing special key ENTER to element.</msg>
<status status="PASS" starttime="20211020 19:24:38.980" endtime="20211020 19:24:39.294"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20211020 19:24:42.301" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20211020 19:24:39.294" endtime="20211020 19:24:42.301"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:38.867" endtime="20211020 19:24:42.301"></status>
</kw>
<kw name="And I should see VARIABLE in ELEMENTKEY" library="MySteps">
<arguments>
<arg>${firstVariable}</arg>
<arg>${last item}</arg>
</arguments>
<kw name="Element Should Contain" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains text ``expected``.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:42.327" level="INFO">Element '(//*[@class='todo-list']//label)[last()]' contains text 'efsso'.</msg>
<status status="PASS" starttime="20211020 19:24:42.301" endtime="20211020 19:24:42.327"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:42.301" endtime="20211020 19:24:42.327"></status>
</kw>
<kw name="Then I click on any checkbox and see as a DONE" library="MySteps">
<arguments>
<arg>${last item checkbox}</arg>
<arg>${firstVariable}</arg>
</arguments>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${issue count}</arg>
</arguments>
<assign>
<var>${firstIssueCountBefore}</var>
</assign>
<msg timestamp="20211020 19:24:42.341" level="INFO">${firstIssueCountBefore} = 1</msg>
<status status="PASS" starttime="20211020 19:24:42.327" endtime="20211020 19:24:42.341"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${firstIssueCountBefore}-1</arg>
</arguments>
<assign>
<var>${firstIssueCountResponse}</var>
</assign>
<msg timestamp="20211020 19:24:42.354" level="INFO">${firstIssueCountResponse} = 0</msg>
<status status="PASS" starttime="20211020 19:24:42.354" endtime="20211020 19:24:42.354"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${elementKey}</arg>
</arguments>
<msg timestamp="20211020 19:24:42.354" level="INFO">Clicking element '(//*[@class='todo-list']//input[@type='checkbox'])[last()]'.</msg>
<status status="PASS" starttime="20211020 19:24:42.354" endtime="20211020 19:24:42.589"></status>
</kw>
<kw name="Get Text" library="SeleniumLibrary">
<doc>Returns the text value of element identified by ``locator``.</doc>
<arguments>
<arg>${issue count}</arg>
</arguments>
<assign>
<var>${firstIssueCountAfter}</var>
</assign>
<msg timestamp="20211020 19:24:42.616" level="INFO">${firstIssueCountAfter} = 0</msg>
<status status="PASS" starttime="20211020 19:24:42.589" endtime="20211020 19:24:42.616"></status>
</kw>
<kw name="Then BuiltIn.Should be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${firstIssueCountResponse}</arg>
<arg>${firstIssueCountAfter}</arg>
<arg>msg=${firstIssueCountResponse} == ${firstIssueCountAfter} does not Match</arg>
</arguments>
<msg timestamp="20211020 19:24:42.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20211020 19:24:42.616" endtime="20211020 19:24:42.616"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>5s</arg>
</arguments>
<msg timestamp="20211020 19:24:47.618" level="INFO">Slept 5 seconds</msg>
<status status="PASS" starttime="20211020 19:24:42.616" endtime="20211020 19:24:47.618"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:42.327" endtime="20211020 19:24:47.618"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${secondVariable}</var>
</assign>
<msg timestamp="20211020 19:24:47.618" level="INFO">${secondVariable} = xwtfw</msg>
<status status="PASS" starttime="20211020 19:24:47.618" endtime="20211020 19:24:47.618"></status>
</kw>
<kw name="And MySteps.I write and press Key" library="MySteps">
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${secondVariable}</arg>
<arg>ENTER</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED inputText=${elementKey}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:24:47.618" endtime="20211020 19:24:47.637"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:47.637" level="INFO">Typing text 'xwtfw' into text field '//input[contains(@placeholder,'What needs to be done')]'.</msg>
<status status="PASS" starttime="20211020 19:24:47.637" endtime="20211020 19:24:47.701"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${key}</arg>
</arguments>
<msg timestamp="20211020 19:24:47.701" level="INFO">Sending key(s) ('ENTER',) to //input[contains(@placeholder,'What needs to be done')] element.</msg>
<msg timestamp="20211020 19:24:47.717" level="INFO">Pressing special key ENTER to element.</msg>
<status status="PASS" starttime="20211020 19:24:47.701" endtime="20211020 19:24:48.000"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20211020 19:24:51.003" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20211020 19:24:48.000" endtime="20211020 19:24:51.003"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:47.618" endtime="20211020 19:24:51.003"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${thirdVariable}</var>
</assign>
<msg timestamp="20211020 19:24:51.003" level="INFO">${thirdVariable} = cglvr</msg>
<status status="PASS" starttime="20211020 19:24:51.003" endtime="20211020 19:24:51.003"></status>
</kw>
<kw name="And MySteps.I write and press Key" library="MySteps">
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${thirdVariable}</arg>
<arg>ENTER</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED inputText=${elementKey}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:24:51.003" endtime="20211020 19:24:51.011"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:51.011" level="INFO">Typing text 'cglvr' into text field '//input[contains(@placeholder,'What needs to be done')]'.</msg>
<status status="PASS" starttime="20211020 19:24:51.011" endtime="20211020 19:24:51.051"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${key}</arg>
</arguments>
<msg timestamp="20211020 19:24:51.051" level="INFO">Sending key(s) ('ENTER',) to //input[contains(@placeholder,'What needs to be done')] element.</msg>
<msg timestamp="20211020 19:24:51.066" level="INFO">Pressing special key ENTER to element.</msg>
<status status="PASS" starttime="20211020 19:24:51.051" endtime="20211020 19:24:51.341"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20211020 19:24:54.345" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20211020 19:24:51.341" endtime="20211020 19:24:54.345"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:51.003" endtime="20211020 19:24:54.345"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${fourthVariable}</var>
</assign>
<msg timestamp="20211020 19:24:54.345" level="INFO">${fourthVariable} = aruyt</msg>
<status status="PASS" starttime="20211020 19:24:54.345" endtime="20211020 19:24:54.345"></status>
</kw>
<kw name="And MySteps.I write and press Key" library="MySteps">
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${fourthVariable}</arg>
<arg>ENTER</arg>
</arguments>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until element ``locator`` appears on current page.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>timeout=15</arg>
<arg>error=DO NOT DISPLAYED inputText=${elementKey}</arg>
</arguments>
<status status="PASS" starttime="20211020 19:24:54.345" endtime="20211020 19:24:54.360"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into text field identified by ``locator``.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:54.360" level="INFO">Typing text 'aruyt' into text field '//input[contains(@placeholder,'What needs to be done')]'.</msg>
<status status="PASS" starttime="20211020 19:24:54.360" endtime="20211020 19:24:54.400"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>${what needs to be done inputText}</arg>
<arg>${key}</arg>
</arguments>
<msg timestamp="20211020 19:24:54.400" level="INFO">Sending key(s) ('ENTER',) to //input[contains(@placeholder,'What needs to be done')] element.</msg>
<msg timestamp="20211020 19:24:54.408" level="INFO">Pressing special key ENTER to element.</msg>
<status status="PASS" starttime="20211020 19:24:54.400" endtime="20211020 19:24:54.688"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>3s</arg>
</arguments>
<msg timestamp="20211020 19:24:57.689" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20211020 19:24:54.688" endtime="20211020 19:24:57.689"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:54.345" endtime="20211020 19:24:57.689"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${all button}</arg>
</arguments>
<msg timestamp="20211020 19:24:57.689" level="INFO">Clicking element '//a[.='All']'.</msg>
<status status="PASS" starttime="20211020 19:24:57.689" endtime="20211020 19:24:57.736"></status>
</kw>
<kw name="And MySteps.I should see variable in table" library="MySteps">
<arguments>
<arg>${firstVariable}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>//*[contains(@class,'todo-list')]//label[text()='${variable}']</arg>
</arguments>
<assign>
<var>${elementKey}</var>
</assign>
<msg timestamp="20211020 19:24:57.736" level="INFO">${elementKey} = //*[contains(@class,'todo-list')]//label[text()='efsso']</msg>
<status status="PASS" starttime="20211020 19:24:57.736" endtime="20211020 19:24:57.736"></status>
</kw>
<kw name="Element Should Contain" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains text ``expected``.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:57.776" level="INFO">Element '//*[contains(@class,'todo-list')]//label[text()='efsso']' contains text 'efsso'.</msg>
<status status="PASS" starttime="20211020 19:24:57.736" endtime="20211020 19:24:57.776"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:57.736" endtime="20211020 19:24:57.776"></status>
</kw>
<kw name="And MySteps.I should see variable in table" library="MySteps">
<arguments>
<arg>${secondVariable}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>//*[contains(@class,'todo-list')]//label[text()='${variable}']</arg>
</arguments>
<assign>
<var>${elementKey}</var>
</assign>
<msg timestamp="20211020 19:24:57.776" level="INFO">${elementKey} = //*[contains(@class,'todo-list')]//label[text()='xwtfw']</msg>
<status status="PASS" starttime="20211020 19:24:57.776" endtime="20211020 19:24:57.776"></status>
</kw>
<kw name="Element Should Contain" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains text ``expected``.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:57.800" level="INFO">Element '//*[contains(@class,'todo-list')]//label[text()='xwtfw']' contains text 'xwtfw'.</msg>
<status status="PASS" starttime="20211020 19:24:57.776" endtime="20211020 19:24:57.800"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:57.776" endtime="20211020 19:24:57.800"></status>
</kw>
<kw name="And MySteps.I should see variable in table" library="MySteps">
<arguments>
<arg>${thirdVariable}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>//*[contains(@class,'todo-list')]//label[text()='${variable}']</arg>
</arguments>
<assign>
<var>${elementKey}</var>
</assign>
<msg timestamp="20211020 19:24:57.800" level="INFO">${elementKey} = //*[contains(@class,'todo-list')]//label[text()='cglvr']</msg>
<status status="PASS" starttime="20211020 19:24:57.800" endtime="20211020 19:24:57.800"></status>
</kw>
<kw name="Element Should Contain" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains text ``expected``.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:57.824" level="INFO">Element '//*[contains(@class,'todo-list')]//label[text()='cglvr']' contains text 'cglvr'.</msg>
<status status="PASS" starttime="20211020 19:24:57.800" endtime="20211020 19:24:57.824"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:57.800" endtime="20211020 19:24:57.824"></status>
</kw>
<kw name="And MySteps.I should see variable in table" library="MySteps">
<arguments>
<arg>${fourthVariable}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>//*[contains(@class,'todo-list')]//label[text()='${variable}']</arg>
</arguments>
<assign>
<var>${elementKey}</var>
</assign>
<msg timestamp="20211020 19:24:57.824" level="INFO">${elementKey} = //*[contains(@class,'todo-list')]//label[text()='aruyt']</msg>
<status status="PASS" starttime="20211020 19:24:57.824" endtime="20211020 19:24:57.824"></status>
</kw>
<kw name="Element Should Contain" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains text ``expected``.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:57.848" level="INFO">Element '//*[contains(@class,'todo-list')]//label[text()='aruyt']' contains text 'aruyt'.</msg>
<status status="PASS" starttime="20211020 19:24:57.824" endtime="20211020 19:24:57.848"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:57.824" endtime="20211020 19:24:57.848"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${active button}</arg>
</arguments>
<msg timestamp="20211020 19:24:57.848" level="INFO">Clicking element '//a[contains(@href,'active')]'.</msg>
<status status="PASS" starttime="20211020 19:24:57.848" endtime="20211020 19:24:57.893"></status>
</kw>
<kw name="And MySteps.I should not see variable in table" library="MySteps">
<arguments>
<arg>${firstVariable}</arg>
</arguments>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<arguments>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:57.917" level="INFO">Current page does not contain element 'efsso'.</msg>
<status status="PASS" starttime="20211020 19:24:57.901" endtime="20211020 19:24:57.917"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:57.893" endtime="20211020 19:24:57.917"></status>
</kw>
<kw name="And MySteps.I should see variable in table" library="MySteps">
<arguments>
<arg>${secondVariable}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>//*[contains(@class,'todo-list')]//label[text()='${variable}']</arg>
</arguments>
<assign>
<var>${elementKey}</var>
</assign>
<msg timestamp="20211020 19:24:57.925" level="INFO">${elementKey} = //*[contains(@class,'todo-list')]//label[text()='xwtfw']</msg>
<status status="PASS" starttime="20211020 19:24:57.925" endtime="20211020 19:24:57.925"></status>
</kw>
<kw name="Element Should Contain" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains text ``expected``.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:57.949" level="INFO">Element '//*[contains(@class,'todo-list')]//label[text()='xwtfw']' contains text 'xwtfw'.</msg>
<status status="PASS" starttime="20211020 19:24:57.925" endtime="20211020 19:24:57.949"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:57.917" endtime="20211020 19:24:57.949"></status>
</kw>
<kw name="And MySteps.I should see variable in table" library="MySteps">
<arguments>
<arg>${thirdVariable}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>//*[contains(@class,'todo-list')]//label[text()='${variable}']</arg>
</arguments>
<assign>
<var>${elementKey}</var>
</assign>
<msg timestamp="20211020 19:24:57.949" level="INFO">${elementKey} = //*[contains(@class,'todo-list')]//label[text()='cglvr']</msg>
<status status="PASS" starttime="20211020 19:24:57.949" endtime="20211020 19:24:57.949"></status>
</kw>
<kw name="Element Should Contain" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains text ``expected``.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:57.973" level="INFO">Element '//*[contains(@class,'todo-list')]//label[text()='cglvr']' contains text 'cglvr'.</msg>
<status status="PASS" starttime="20211020 19:24:57.949" endtime="20211020 19:24:57.973"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:57.949" endtime="20211020 19:24:57.973"></status>
</kw>
<kw name="And MySteps.I should see variable in table" library="MySteps">
<arguments>
<arg>${fourthVariable}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>//*[contains(@class,'todo-list')]//label[text()='${variable}']</arg>
</arguments>
<assign>
<var>${elementKey}</var>
</assign>
<msg timestamp="20211020 19:24:57.973" level="INFO">${elementKey} = //*[contains(@class,'todo-list')]//label[text()='aruyt']</msg>
<status status="PASS" starttime="20211020 19:24:57.973" endtime="20211020 19:24:57.973"></status>
</kw>
<kw name="Element Should Contain" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains text ``expected``.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:57.997" level="INFO">Element '//*[contains(@class,'todo-list')]//label[text()='aruyt']' contains text 'aruyt'.</msg>
<status status="PASS" starttime="20211020 19:24:57.973" endtime="20211020 19:24:57.997"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:57.973" endtime="20211020 19:24:57.997"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click element identified by ``locator``.</doc>
<arguments>
<arg>${completed button}</arg>
</arguments>
<msg timestamp="20211020 19:24:57.997" level="INFO">Clicking element '//a[contains(@href,'completed')]'.</msg>
<status status="PASS" starttime="20211020 19:24:57.997" endtime="20211020 19:24:58.037"></status>
</kw>
<kw name="And MySteps.I should see variable in table" library="MySteps">
<arguments>
<arg>${firstVariable}</arg>
</arguments>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>//*[contains(@class,'todo-list')]//label[text()='${variable}']</arg>
</arguments>
<assign>
<var>${elementKey}</var>
</assign>
<msg timestamp="20211020 19:24:58.045" level="INFO">${elementKey} = //*[contains(@class,'todo-list')]//label[text()='efsso']</msg>
<status status="PASS" starttime="20211020 19:24:58.045" endtime="20211020 19:24:58.045"></status>
</kw>
<kw name="Element Should Contain" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` contains text ``expected``.</doc>
<arguments>
<arg>${elementKey}</arg>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:58.076" level="INFO">Element '//*[contains(@class,'todo-list')]//label[text()='efsso']' contains text 'efsso'.</msg>
<status status="PASS" starttime="20211020 19:24:58.045" endtime="20211020 19:24:58.076"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:58.045" endtime="20211020 19:24:58.076"></status>
</kw>
<kw name="And MySteps.I should not see variable in table" library="MySteps">
<arguments>
<arg>${secondVariable}</arg>
</arguments>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<arguments>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:58.092" level="INFO">Current page does not contain element 'xwtfw'.</msg>
<status status="PASS" starttime="20211020 19:24:58.084" endtime="20211020 19:24:58.092"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:58.076" endtime="20211020 19:24:58.092"></status>
</kw>
<kw name="And MySteps.I should not see variable in table" library="MySteps">
<arguments>
<arg>${thirdVariable}</arg>
</arguments>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<arguments>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:58.108" level="INFO">Current page does not contain element 'cglvr'.</msg>
<status status="PASS" starttime="20211020 19:24:58.092" endtime="20211020 19:24:58.108"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:58.092" endtime="20211020 19:24:58.108"></status>
</kw>
<kw name="And MySteps.I should not see variable in table" library="MySteps">
<arguments>
<arg>${fourthVariable}</arg>
</arguments>
<kw name="Page Should Not Contain Element" library="SeleniumLibrary">
<doc>Verifies that element ``locator`` is found on the current page.</doc>
<arguments>
<arg>${variable}</arg>
</arguments>
<msg timestamp="20211020 19:24:58.117" level="INFO">Current page does not contain element 'aruyt'.</msg>
<status status="PASS" starttime="20211020 19:24:58.108" endtime="20211020 19:24:58.117"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:58.108" endtime="20211020 19:24:58.117"></status>
</kw>
<kw name="close session" library="Base" type="teardown">
<kw name="Close All Browsers" library="SeleniumLibrary">
<doc>Closes all open browsers and resets the browser cache.</doc>
<status status="PASS" starttime="20211020 19:24:58.117" endtime="20211020 19:25:01.430"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:58.117" endtime="20211020 19:25:01.430"></status>
</kw>
<status status="PASS" starttime="20211020 19:24:32.113" endtime="20211020 19:25:01.430" critical="yes"></status>
</test>
<status status="PASS" starttime="20211020 19:22:28.278" endtime="20211020 19:25:01.438"></status>
</suite>
<statistics>
<total>
<stat pass="7" fail="0">Critical Tests</stat>
<stat pass="7" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="7" fail="0" id="s1" name="Test">Test</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20211020 19:22:28.740" level="ERROR">Error in file 'D:\Users\nusahin\Documents\GitHub\ModaNisa_Interview\TestCases\Test.robot': Importing test library 'RequestLibrary' failed: ModuleNotFoundError: No module named 'RequestLibrary'
Traceback (most recent call last):
  None
PYTHONPATH:
  D:\Users\nusahin\Documents\GitHub\ModaNisa_Interview
  C:\Program Files (x86)\testerq\Python\Lib\http
  C:\Program Files (x86)\testerq\python\python37.zip
  C:\Program Files (x86)\testerq\python\DLLs
  C:\Program Files (x86)\testerq\python\lib
  C:\Program Files (x86)\testerq\python
  D:\Users\nusahin\AppData\Roaming\Python\Python37\site-packages
  C:\Program Files (x86)\testerq\python\lib\site-packages
  C:\Program Files (x86)\testerq\python\lib\site-packages\robotframework_openstflibrary-0.1.1-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\pyswagger-0.8.39-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\validate_email-1.3-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\pyaml-18.11.0-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\pyyaml-4.2b4-py3.7-win32.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\robotframework_requests-0.5.0-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\idna-2.8-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\chardet-3.0.4-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\certifi-2018.11.29-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\robotframework_jsonlibrary-0.2-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\coverage-5.0a4-py3.7-win32.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\tox-3.6.1-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\virtualenv-16.2.0-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\toml-0.10.0-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\py-1.7.0-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\filelock-3.0.10-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\robotframework_csvlibrary-0.0.2-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\robotframework_stublibrary-0.1.5-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\gevent-1.5a1-py3.7-win32.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\allpairspy-2.5.0-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\jsonpointer-2.0-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\falcon_multipart-0.2.0-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\jsonpatch-1.24-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\webtest-2.0.33-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\psutil-5.6.3-py3.7-win32.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\greenlet-0.4.15-py3.7-win32.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\cffi-1.12.3-py3.7-win32.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\waitress-1.3.0-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\beautifulsoup4-4.8.0-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\webob-1.8.5-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\pycparser-2.19-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\soupsieve-1.9.2-py3.7.egg
  C:\Program Files (x86)\testerq\python\lib\site-packages\win32
  C:\Program Files (x86)\testerq\python\lib\site-packages\win32\lib
  C:\Program Files (x86)\testerq\python\lib\site-packages\Pythonwin</msg>
<msg timestamp="20211020 19:22:28.780" level="WARN">Imported resource file 'D:\Users\nusahin\Documents\GitHub\ModaNisa_Interview\Resources\Config\Pages\Login.robot' is empty.</msg>
</errors>
</robot>
